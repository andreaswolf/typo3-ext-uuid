image: core.a-w.io/aw/docker-webbuild:v24.1

variables:
  COMPOSER_ALLOW_SUPERUSER: 1
  COMPOSER_NO_INTERACTION: 1
  # only include cache dir here so the configuration does not get tainted
  COMPOSER_CACHE_DIR: /cache/fes/composer
  npm_config_cache: /cache/fes/npm

workflow:
  rules:
    # run pipelines for tags
    - if: '$CI_COMMIT_TAG'
    # run if something happened in a merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    # run scheduled builds
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    # run manually started pipelines
    - if: '$CI_PIPELINE_SOURCE == "web"'

stages:
  - code-check
  - build
  - test
  - publish


code-style:php:
  tags:
    - docker
  interruptible: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  stage: code-check
  script:
    - update-alternatives --set php /usr/bin/php$PHP_VERSION
    - composer install --no-progress -d .Tools/
    - composer cs:check
  parallel:
    matrix:
      - PHP_VERSION:
          - "8.1"
          - "8.2"
          - "8.3"

static:php:
  tags:
    - docker
  interruptible: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  stage: code-check
  script:
    - update-alternatives --set php /usr/bin/php$PHP_VERSION
    - composer require typo3/minimal:"$TYPO3_VERSION"
    - composer install --no-progress
    - composer analyse
  parallel:
    matrix:
      - PHP_VERSION:
          - "8.1"
          - "8.2"
          - "8.3"
        TYPO3_VERSION:
          - "^12.4"
      - PHP_VERSION:
          - "8.2"
          - "8.3"
        TYPO3_VERSION:
          - "^13.4"

build:docs:
  tags:
    - shell
  interruptible: true
  # temporarily allowing failures because the Docker-based docs build is broken as of 2023-04
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  stage: build
  needs: []
  script:
    - source <(docker run --rm t3docs/render-documentation show-shell-commands)
    - dockrun_t3rd makehtml
  artifacts:
    paths:
      - Documentation-GENERATED-temp
    expire_in: 30 days
    expose_as: documentation

test:php:functional:
  tags:
    - docker
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  allow_failure: false
  variables:
    MYSQL_PASSWORD: typo3
    MYSQL_DATABASE: typo3
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: typo3
    typo3DatabaseName: typo3
    typo3DatabaseUsername: typo3
    typo3DatabasePassword: typo3
    typo3DatabaseHost: mysql-db
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/mysql:5.7.34
      alias: mysql-db
  script:
    - mysql -h mysql-db -u root -proot mysql -e 'GRANT ALL ON `typo3_%`.* TO `typo3`@`%` IDENTIFIED BY "typo3"'

    - update-alternatives --set php /usr/bin/php$PHP_VERSION
    - cd .Build/
    - composer require typo3/minimal:"$TYPO3_VERSION"
    - composer install --no-progress
    - composer test:php:functional -- --testdox
  parallel:
    matrix:
      - PHP_VERSION:
          - "8.1"
          - "8.2"
          - "8.3"
        TYPO3_VERSION:
          - "^12.4"
      - PHP_VERSION:
          - "8.2"
          - "8.3"
        TYPO3_VERSION:
          - "^13.4"

publish:satis:
  stage: publish
  trigger:
    project: typo3-ext/satis-repo
    branch: main

publish:ter:
  stage: publish
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
      variables:
        RELEASE_TAG: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "web" && $RELEASE_TAG != ""'
  script:
    - composer global require typo3/tailor
    - echo -e "Preparing upload of release ${RELEASE_TAG} to TER\n"
      # Cleanup before we upload
    - git reset --hard HEAD && git clean -fx
      # Upload
    - RELEASE_MESSAGE=${RELEASE_MESSAGE:-$(git tag -n10 -l ${RELEASE_TAG} | sed 's/^[0-9.]*[ ]*//g')}
    - echo "Uploading release ${RELEASE_TAG} to TER"
    - $(composer global config bin-dir --absolute --quiet)/tailor set-version ${RELEASE_TAG}
    - $(composer global config bin-dir --absolute --quiet)/tailor ter:publish --comment "${RELEASE_MESSAGE}" "${RELEASE_TAG}" "${TYPO3_EXTENSION_KEY}"
